/* 
# not 
*/

thm absurd.1(prop p1, prop p2) {
  |- imp(not(p1), imp(p1, p2))
} = {
  syl(not(p1), imp(p1,p2), imp(not(p2), not(p1)))
  ax.1(not(p1), not(p2))
  ax.3(p2, p1)
}
thm absurd.2(prop p1, prop p2) {
  |- imp(p1, imp(not(p1), p2))
} = {
  com12(p1, not(p1), p2)
  absurd.1(p1, p2)
}
thm absurd.3(prop p1) {
  |- imp(imp(not(p1), p1), p1)
} = {
  mpd(imp(not(p1),p1), p1, imp(not(p1), p1))
  id(imp(not(p1),p1))
  syl(imp(not(p1),p1), imp(imp(not(p1),p1),p1), imp(not(p1), not(imp(not(p1),p1))))
  ax.3(p1, imp(not(p1),p1))
  a2i(not(p1), p1, not(imp(not(p1),p1)))
  absurd.1(p1, not(imp(not(p1),p1)))
}

thm false-means-everything(prop p1) {
  |- imp(false, p1)
} = {
  ax.mp(imp(false,p1), not(false))
  false.def
  absurd.1(false, p1)
}

thm a3i(prop p1, prop p2) {
  |- imp(p1, p2)
  -| imp(not(p2), not(p1))
} = {
  ax.mp(imp(p1,p2), imp(not(p2),not(p1)))
  ax.3(p2, p1)
}

thm notnot.1(prop p1) {
  |- imp(not(not(p1)), p1)
} = {
  mpd(not(not(p1)), p1, not(not(p1)))
  id(not(not(p1)))
  syl(not(not(p1)), imp(not(not(p1)),p1), imp(not(p1), not(not(not(p1)))))
  absurd.1(not(p1), not(not(not(p1))))
  ax.3(p1, not(not(p1)))
}
thm notnot.2(prop p1) {
  |- imp(p1, not(not(p1)))
} = {
  a3i(p1, not(not(p1)))
  notnot.1(not(p1))
}
thm notnot.i(prop p1) {
  |- not(not(p1))
  -| p1
} = {
  ax.mp(not(not(p1)), p1)
  notnot.2(p1)
}

thm contra.1(prop p1, prop p2) {
  |- imp( imp(not(p1),p2), imp(not(p2), p1) )
} = {
  syl(imp(not(p1),p2), imp(not(p2),p1), imp(not(p1), not(not(p2))))
  ax.3(p1, not(p2))
  a2i(not(p1), p2, not(not(p2)))
  a1i(not(p1), imp(p2,not(not(p2))))
  notnot.2(p2)
}
thm contra.1i(prop p1, prop p2) {
  |- imp(not(p1), p2)
  -| imp(not(p2), p1)
} = {
  ax.mp(imp(not(p1),p2), imp(not(p2), p1))
  contra.1(p2, p1)
}
thm contra.1d(prop p1, prop p2, prop p3) {
  |- imp(p1, imp(not(p2), p3))
  -| imp(p1, imp(not(p3), p2))
} = {
  syl(p1, imp(not(p2),p3), imp(not(p3), p2))
  contra.1(p3, p2)
}
thm contra.2(prop p1, prop p2) {
  |- imp( imp(p1,not(p2)), imp(p2, not(p1)) )
} = {
  syl(imp(p1,not(p2)), imp(p2,not(p1)), imp(not(not(p1)), not(p2)))
  ax.3(not(p1), p2)
  syl.d.2(p1, not(not(p1)), not(p2))
  notnot.1(p1)
}
thm contra.2i(prop p1, prop p2) {
  |- imp(p1, not(p2))
  -| imp(p2, not(p1))
} = {
  ax.mp(imp(p1,not(p2)), imp(p2, not(p1)))
  contra.2(p2, p1)
}
thm contra.2d(prop p1, prop p2, prop p3) {
  |- imp(p1, imp(p2, not(p3)))
  -| imp(p1, imp(p3, not(p2)))
} = {
  syl(p1, imp(p2,not(p3)), imp(p3, not(p2)))
  contra.2(p3, p2)
}
thm contra.3(prop p1, prop p2) {
  |- imp( imp(p1,p2), imp(not(p2), not(p1)) )
} = {
  syl(imp(p1,p2), imp(not(p2),not(p1)), imp(not(not(p1)), p2))
  contra.1(not(p1), p2)
  syl.d.2(p1, not(not(p1)), p2)
  notnot.1(p1)
}
thm contra.3i(prop p1, prop p2) {
  |- imp(not(p1), not(p2))
  -| imp(p2, p1)
} = {
  ax.mp(imp(not(p1),not(p2)), imp(p2, p1))
  contra.3(p2, p1)
}
thm contra.3d(prop p1, prop p2, prop p3) {
  |- imp(p1, imp(not(p2), not(p3)))
  -| imp(p1, imp(p3, p2))
} = {
  syl(p1, imp(not(p2),not(p3)), imp(p3, p2))
  contra.3(p3, p2)
}
thm contra.4(prop p1, prop p2) {
  |- imp( imp(not(p2), not(p1)), imp(p1,p2) )
} = {
  ax.3(p2, p1)
}
thm contra.4i(prop p1, prop p2) {
  |- imp(p2, p1)
  -| imp(not(p1), not(p2))
} = {
  ax.mp(imp(p2, p1), imp(not(p1),not(p2)))
  contra.4(p2, p1)
}
thm contra.4d(prop p1, prop p2, prop p3) {
  |- imp(p1, imp(p2, p3))
  -| imp(p1, imp(not(p3), not(p2)))
} = {
  syl(p1, imp(p2,p3), imp(not(p3), not(p2)))
  contra.4(p2, p3)
}
thm contra(prop p1, prop p2) {
  |- imp(imp(p1, p2), imp(not(p2), not(p1)))
  |- imp(imp(not(p1), not(p2)), imp(p2, p1))
  |- imp(imp(p1, not(p2)), imp(p2, not(p1)))
  |- imp(imp(not(p1), p2), imp(not(p2), p1))
} = {
  contra.1(p1, p2)
  contra.2(p1, p2)
  contra.3(p1, p2)
  contra.4(p2, p1)
}
thm absurd.4(prop p1) {
  |- imp(imp(p1, not(p1)), not(p1))
} = {
  syl(imp(p1,not(p1)), not(p1), imp(not(not(p1)),not(p1)))
  contra(p1, not(p1))  
  absurd.3(not(p1))
}
thm absurd.1d(prop p1, prop p2, prop p3) {
  |- imp(p1, p2)
  -| imp(p1, imp(p3, p2))
  -| imp(p1, imp(not(p3), p2))
} = {
  syl(p1, p2, imp(not(p2), p2))
  absurd.3(p2)
  syld(p1, not(p2), p2, p3)
  contra.1d(p1, p2, p3)
}

thm ja(prop p1, prop p2, prop p3) {
  |- imp(imp(p1, p2), p3)
  -| imp(not(p1), p3)
  -| imp(p2, p3)
} = {
  absurd.1d(imp(p1,p2), p3, p1)
  a1i(imp(p1,p2), imp(not(p1),p3))
  syl.d.1(p1, p2, p3)
}

thm contradiction(prop p0, prop p1) {
  |- not(p0)
  -| imp(p0, p1)
  -| imp(p0, not(p1))
} = {
  ax.mp(not(p0), imp(p0,p1))
  ja(p0, p1, not(p0))
  id(not(p0))
  contra.2i(p1, p0)
}
thm contradiction.d(prop p0, prop p1) {
  |- imp(imp(p0,p1), imp(imp(p0,not(p1)), not(p0)))
  |- imp(imp(p0,not(p1)), imp(imp(p0,p1), not(p0)))
} = {
  com12(imp(p0,not(p1)), imp(p0,p1), not(p0))
  syl5(imp(p0,p1), imp(p0,not(p1)), not(p0), imp(p1, not(p0)))
  contra(p0, p1)
  syl6(imp(p0,p1), imp(p1,not(p0)), not(p0), imp(p0,not(p0)))
  imp.trans(p0, p1, not(p0))
  absurd.4(p0)
}

thm not.imp.left(prop p0, prop p1, prop p2) {
    |- not(imp(p0, p1))
    -| not(imp(p2, p1))
    -| imp(p2, p0)
} = {
    ax.mp(not(imp(p0,p1)), not(imp(p2, p1)))
    contra.3i(imp(p2,p1), imp(p0,p1))
    ax.mp(imp(imp(p0,p1),imp(p2,p1)), imp(p2,p0))
    imp.trans.1(p2, p0, p1)
}