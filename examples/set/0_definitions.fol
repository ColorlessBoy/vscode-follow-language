type wff
const wff hw0 hw1 hw2 hw3 hw4 hw5 hw6 hw7 hw8 hw9 hw10
prop wff not(wff w0)
prop wff imp(wff w0, wff w1)
prop wff iff(wff w0, wff w1)
prop wff and(wff w0, wff w1)
prop wff or(wff w0, wff w1)
axiom ax-1(wff w0, wff w1) {|- imp w0 imp w1 w0}
axiom ax-2(wff w0, wff w1, wff w2) {|- imp (imp w0 imp w1 w2) (imp imp w0 w1 imp w0 w2)}
axiom ax-3(wff w0, wff w1) {|- imp (imp not w0 not w1) (imp w1 w0)}
axiom ax-mp(wff w0, wff w1) {-| w0 -| imp w0 w1 |- w1}


axiom df-iff(wff w0, wff w1) {
  |- not imp
    imp (iff w0 w1) (not imp imp w0 w1 not imp w1 w0)
    not imp (not imp imp w0 w1 not imp w1 w0) (iff w0 w1)
}
axiom df-and(wff w0, wff w1) {|- iff and w0 w1 not imp w0 not w1}
axiom df-or(wff w0, wff w1) {|- iff or w0 w1 imp not w0 w1}


prop wff ifp(wff cond, wff w0, wff w1)
axiom df-ifp(wff cond, wff w0, wff w1) {  |- iff ifp cond w0 w1 or and cond w0 and not cond w1}


prop wff 3or(wff w0, wff w1, wff w2)
axiom df-3or(wff w0, wff w1, wff w2) { |- iff 3or w0 w1 w2 or or w0 w1 w2}
prop wff 3and(wff w0, wff w1, wff w2)
axiom df-3and(wff w0, wff w1, wff w2) { |- iff 3and w0 w1 w2 and and w0 w1 w2}


prop wff nand(wff w0, wff w1)
axiom df-nand(wff w0, wff w1) { |- iff (nand w0 w1) not (and w0 w1) }


prop wff xor(wff w0, wff w1)
axiom df-xor(wff w0, wff w1) { |- iff (xor w0 w1) not (iff w0 w1) }


type setvar class
prop wff eqset(setvar s0, setvar s1)
prop wff eqclass(class c0, class c1)
prop wff forall(setvar s0, wff w0)
prop class cv(setvar s0)


const wff true false
axiom df-true(setvar s0) { |- iff true imp (forall s0 eqclass cv s0 cv s0) (forall s0 eqclass cv s0 cv s0)}
axiom df-false() { |- iff false not true }

prop wff hadd(wff w0, wff w1, wff w2)
axiom df-hadd(wff w0, wff w1, wff w2) { |- iff (hadd w0 w1 w2) (xor xor w0 w1 w2) }
prop wff cadd(wff w0, wff w1, wff w2)
axiom df-cadd(wff w0, wff w1, wff w2) { |- iff (cadd w0 w1 w2) (or (and w0 w1) (and w2 xor w0 w1)) }


prop wff exist(setvar s0, wff w0)
axiom df-ex(wff w0, setvar s0) { |- iff (exist s0 w0) (not forall s0 not w0) }

prop wff notfree(setvar s0, wff w0)
axiom df-nf(wff w0, setvar s0) { |- iff (notfree s0 w0) (imp exist s0 w0 forall s0 w0) }


axiom ax-gen(wff w0, setvar s0) { -| w0 |- forall s0 w0 }
axiom ax-4(wff w0, wff w1, setvar s0) { |- imp (forall s0 imp w0 w1) (imp forall s0 w0 forall s0 w1) }


prop wff diff(setvar s0, wff w0)
prop wff diffs(setvar s0, setvar s1)
axiom ax-5(wff w0, setvar s0) { -| diff s0 w0 |- imp w0 forall s0 w0 }
axiom diff-true(setvar s0) { |- diff s0 true }
axiom diff-false(setvar s0) { |- diff s0 false }
axiom diff-not(wff w0, setvar s0) { |- iff (diff s0 w0) (diff s0 not w0) }
axiom diff-imp(wff w0, wff w1, setvar s0) { |- iff (diff s0 imp w0 w1) and (diff s0 w0) (diff s0 w1) }
axiom diff-iff(wff w0, wff w1, setvar s0) { |- iff (diff s0 iff w0 w1) and (diff s0 w0) (diff s0 w1) }
axiom diff-and(wff w0, wff w1, setvar s0) { |- iff (diff s0 and w0 w1) and (diff s0 w0) (diff s0 w1) }
axiom diff-3and(wff w0, wff w1, wff w2, setvar s0) { |- iff (diff s0 3and w0 w1 w2) and (diff s0 w0) and (diff s0 w1) (diff s0 w2) }
axiom diff-or(wff w0, wff w1, setvar s0) { |- iff (diff s0 or w0 w1) and (diff s0 w0) (diff s0 w1) }
axiom diff-3or(wff w0, wff w1, wff w2, setvar s0) { |- iff (diff s0 3or w0 w1 w2) and (diff s0 w0) and (diff s0 w1) (diff s0 w2) }
axiom diff-forall(wff w0, setvar s0, setvar s1) { |- iff (diff s0 forall s1 w0) and (diffs s0 s1) (diff s0 w0) }
axiom diff-exist(wff w0, setvar s0, setvar s1) { |- iff (diff s0 exist s1 w0) and (diffs s0 s1) (diff s0 w0) }
axiom diff-eqset(setvar s0, setvar s1, setvar s2) { |- iff (diff s0 eqset s1 s2) and (diffs s0 s1) (diffs s0 s2)}
axiom diffs-ex(setvar s0, setvar s1) { |- iff (diffs s0 s1) (diffs s1 s0) }

// used for proof, h stands for hidden
// maybe there is better solution
const setvar hs0 hs1 hs2
axiom df-hs0-w(wff w0) { |- diff hs0 w0}
axiom df-hs1-w(wff w0) { |- diff hs1 w0}
axiom df-hs2-w(wff w0) { |- diff hs2 w0}
axiom df-hs0-s(setvar s0) { |- diffs hs0 s0}
axiom df-hs1-s(setvar s0) { |- diffs hs1 s0}
axiom df-hs2-s(setvar s0) { |- diffs hs2 s0}

axiom ax-6(setvar s0, setvar s1) { |- not forall s0 not eqset s0 s1 }
axiom ax-7(setvar s0, setvar s1, setvar s2) { |- imp eqset s0 s1 imp eqset s0 s2 eqset s1 s2 }

prop wff subs(setvar s0, setvar s1, wff w0)
axiom df-sb(wff w0, setvar s0, setvar s1, setvar s2) {
  |- iff (subs s0 s1 w0) (forall s2 imp (eqset s2 s1) (forall s0 imp eqset s0 s2 w0))
}
axiom diff-subs(wff w0, setvar s0, setvar s1, setvar s2) {
  |- iff (diff s0 subs s1 s2 w0) (and diffs s0 s1 and diffs s0 s2 diff s0 w0)
}

prop wff inset(setvar s0, setvar s1)
axiom ax-8(setvar s0, setvar s1, setvar s2) {
  |- imp eqset s0 s1 imp inset s0 s2 inset s1 s2
}
axiom ax-9(setvar s0, setvar s1, setvar s2) {
  |- imp eqset s0 s1 imp inset s2 s0 inset s2 s1
}

axiom diff-inset(setvar s0, setvar s1, setvar s2) {
  |- iff (diff s0 inset s1 s2) (and diffs s0 s1 diffs s0 s2)
}

axiom ax-10(wff w0, setvar s0) {
  |- imp not forall s0 w0 forall s0 not forall s0 w0
}
axiom ax-11(wff w0, setvar s0, setvar s1) {
  |- imp (forall s0 forall s1 w0) (forall s1 forall s0 w0)
}
axiom ax-12(wff w0, setvar s0, setvar s1) {
  |- imp eqset s0 s1
     imp (forall s1 w0) (forall s0 imp eqset s0 s1 w0)
}
axiom ax-13(setvar s0, setvar s1, setvar s2) {
  |- imp not eqset s0 s1
    imp (eqset s1 s2) (forall s0 eqset s1 s2)
}

prop wff mo(setvar s0, wff w0)
axiom df-mo(wff w0, setvar s0, setvar s1) {
  |- iff (mo s0 w0) (exist s1 forall s0 (imp w0 eqset s0 s1))
}
prop wff eu(setvar s0, wff w0)
axiom df-eu(wff w0, setvar s0) {
  |- iff (eu s0 w0) (and exist s0 w0 mo s0 w0)
}

axiom diff-mo(wff w0, setvar s0, setvar s1) {
  |- iff diff s0 mo s1 w0 and diffs s0 s1 diff s0 w0
}
axiom diff-eu(wff w0, setvar s0, setvar s1) {
  |- iff diff s0 eu s1 w0 and diffs s0 s1 diff s0 w0
}

