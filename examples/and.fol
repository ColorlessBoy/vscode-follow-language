/*
  # and 
*/

thm and.left(prop p1, prop p2) {
  |- imp(and(p1, p2), p1)
} = {
  syl(and(p1,p2), p1, not(imp(p1, not(p2))))
  and.def.1(p1, p2)
  contra.1i(imp(p1,not(p2)), p1)
  absurd.1(p1, not(p2))
}

thm and.right(prop p1, prop p2) {
  |- imp(and(p1, p2), p2)
} = {
  syl(and(p1,p2), p2, not(imp(p1, not(p2))))
  and.def.1(p1, p2)
  contra.1i(imp(p1,not(p2)), p2)
  ax.1(not(p2), p1)
}

thm and.forintro(prop p1, prop p2) {
  |- imp(p1, imp(p2, and(p1, p2)))
} = {
  syl6(p1, p2, and(p1,p2), not(imp(p1, not(p2))))
  and.def.2(p1, p2)
  syl(p1, imp(p2,not(imp(p1,not(p2)))), imp(imp(p1,not(p2)), not(p2)))
  contra.2(imp(p1,not(p2)), p2)
  com12(p1, imp(p1,not(p2)), not(p2))
  id(imp(p1,not(p2)))
}

thm and.intro(prop p1, prop p2) {
  |- and(p1, p2)
  -| p1
  -| p2
} = {
  ax.mp(and(p1,p2), p2)
  ax.mp(imp(p2,and(p1,p2)), p1)
  and.forintro(p1, p2)
}

// Importation inference.
thm and.impo(prop p1, prop p2, prop p3) {
  |- imp(and(p1, p2), p3)
  -| imp(p1, imp(p2, p3))
} = {
  syl(and(p1,p2), p3, not(imp(p1,not(p2))))
  and.def.1(p1, p2)
  contra.1i(imp(p1,not(p2)), p3)
  com12(not(p3), p1, not(p2))
  contra.3d(p1, p3, p2)
}

// Exportation inference
thm and.expo(prop p1, prop p2, prop p3) {
  |- imp(p1, imp(p2, p3))
  -| imp(and(p1, p2), p3)
} = {
  syl6(p1, p2, p3, and(p1, p2))
  and.forintro(p1, p2)
}

thm and.comm(prop p1, prop p2) {
  |- imp(and(p1, p2), and(p2, p1))
} = {
  and.impo(p1, p2, and(p2,p1))
  com12(p1, p2, and(p2,p1))
  and.forintro(p2, p1)
}

thm and.intro.d(prop p1, prop p2, prop p3) {
  |- imp(p1, and(p2, p3))
  -| imp(p1, p2)
  -| imp(p1, p3)
} = {
  mpd(p1, and(p2,p3), p3)
  syl(p1, imp(p3,and(p2,p3)), p2)
  and.forintro(p2, p3)
}

thm and.intro.d.d(prop p0, prop p1, prop p2, prop p3) {
  |- imp(p0, imp(p1, and(p2, p3)))
  -| imp(p0, imp(p1, p2))
  -| imp(p0, imp(p1, p3))
} = {
  mpd(p0, imp(p1,and(p2,p3)), imp(p1,p2))
  a2d(p0, p1, p2, and(p2,p3))
  mpd(p0, imp(p1,imp(p2,and(p2,p3))), imp(p1,p3))
  a2d(p0, p1, p3, imp(p2,and(p2,p3)))
  a1i(p0, imp(p1,imp(p3,imp(p2,and(p2,p3)))))
  a1i(p1, imp(p3,imp(p2,and(p2,p3))))
  com12(p3, p2, and(p2,p3))
  and.forintro(p2, p3)
}

thm and.not(prop p1) {
  |- not(and(p1, not(p1)))
} = {
  ax.mp(not(and(p1,not(p1))), not(not(imp(p1, not(not(p1))))))
  notnot.i(imp(p1,not(not(p1))))
  notnot.2(p1)
  contra.3i(not(imp(p1,not(not(p1)))), and(p1,not(p1)))
  and.def.1(p1, not(p1))
}

thm not.and(prop p0, prop p1) {
  |- not(and(p0, p1))
  |- not(and(p1, p0))
  -| not(p0)
} = {
  ax.mp(not(and(p0,p1)), not(p0))
  contra.3i(p0, and(p0,p1))
  and.left(p0, p1)
  ax.mp(not(and(p1,p0)), not(p0))
  contra.3i(p0, and(p1,p0))
  and.right(p1, p0)
}

thm imp.and.imp.and(prop p0, prop p1, prop p2, prop p3, prop p4) {
    |- imp(p0, imp(and(p1,p2), and(p3, p4)))
    -| imp(p0, imp(p1, p3))
    -| imp(p0, imp(p2, p4))
} = {
  syl5(p0, and(p1,p2), and(p3,p4), not(imp(p1, not(p2))))
  and.def.1(p1, p2)
  syl6(p0, not(imp(p1,not(p2))), and(p3,p4), not(imp(p3, not(p4))))
  and.def.2(p3, p4)
  contra.3d(p0, imp(p1,not(p2)), imp(p3,not(p4)))
  a2ii(p0, imp(imp(p3,not(p4)),imp(p1,not(p2))), imp(p1,p3))
  syl6d(p0, imp(p1,p3), imp(p3,not(p4)), imp(p1,not(p2)), imp(p1,not(p4)))
  a1i(p0, imp(imp(p1,p3),imp(imp(p3,not(p4)),imp(p1,not(p4)))))
  imp.trans(p1, p3, not(p4))
  syl(p0, imp(imp(p1,not(p4)),imp(p1,not(p2))), imp(not(p4),not(p2)))
  contra.3d(p0, p4, p2)
  imp.trans(not(p4), not(p2), p1)
}

thm and.impo.d(prop p1, prop p2, prop p3) {
  |- imp(imp(p1, imp(p2, p3)), imp(and(p1, p2), p3))
} = {
  syl5(imp(p1,imp(p2,p3)), and(p1,p2), p3, not(imp(p1,not(p2))))
  and.def(p1, p2)
  contra.1d(imp(p1,imp(p2,p3)), imp(p1,not(p2)), p3)
  com23(imp(p1,imp(p2,p3)), not(p3), p1, not(p2))
  a2i(p1, imp(p2,p3), imp(not(p3),not(p2)))
  a1i(p1, imp(imp(p2,p3),imp(not(p3),not(p2))))
  contra(p2, p3)
}