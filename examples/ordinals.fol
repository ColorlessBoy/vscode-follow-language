
term set opair.abs(set s0, set s1, prop p0) { { (s0, s1) | p0} }
axiom opair.abs.def(prop p0, set s0, set s1, set s2) {
  |- eq(opair.abs(s0, s1, p0), abs(s2, exist(s0, exist(s1, and(eq(s2, opair(s0,s1)), p0)))))
  diff (s2, p0) (s2, s0) (s2, s1)
}

term set relation.in { âˆˆ }
axiom relation.in.def(set s0, set s1) {
  |- eq(relation.in, opair.abs(s0, s1, in(s0,s1)))
} 

term prop ord(set s0) { Ord(s0) }
term set ord.universe
term prop ord.limit(set s0) { Lim(s0) }
term set ord.succ(set s0)  { succ(s0) }

axiom ord.def(set s0) {
  |- iff(ord(s0), and(transitive(s0), worder(relation.in, s0)))
  |- imp(ord(s0), and(transitive(s0), worder(relation.in, s0)))
  |- imp(ord(s0), transitive(s0))
  |- imp(ord(s0), worder(relation.in, s0))
  |- imp(and(transitive(s0), worder(relation.in, s0)), ord(s0))
  |- imp(transitive(s0), imp(worder(relation.in, s0), ord(s0)))
  |- imp(worder(relation.in, s0), imp(transitive(s0), ord(s0)))
}

axiom ord.universe.def(set s0) {
  |- eq(ord.universe, abs(s0, ord(s0)))
  |- iff(in(s0, ord.universe), ord(s0))
  |- imp(in(s0, ord.universe), ord(s0))
  |- imp(ord(s0), in(s0, ord.universe))
}
axiom ord.limit.def(set s0) {
  |- iff(ord.limit(s0), and(ord(s0), and(neq(s0, emptyset), eq(s0, ssunion(s0)))))
}
axiom ord.succ.def(set s0) {
  |- eq(ord.succ(s0), sunion(s0, singleton(s0)))
}

thm eq.ord(set s0, set s1) {
  |- imp(eq(s0, s1), imp(ord(s0), ord(s1)))
} = {
  syl56(eq(s0,s1), ord(s0), ord(s1), and(transitive(s0),worder(relation.in,s0)), and(transitive(s1),worder(relation.in,s1)))
  ord.def(s0)
  ord.def(s1)
  imp.and.imp.and(eq(s0,s1), transitive(s0), worder(relation.in,s0), transitive(s1), worder(relation.in,s1))
  eq.transitive(s0, s1)
  eq.worder(relation.in, s0, s1)
}

thm ord.in(set s0, set s1) {
  |- imp(ord(s1), imp(in(s0,s1), subseteq(s0,s1)))
} = {
  syl(ord(s1), imp(in(s0,s1),subseteq(s0,s1)), transitive(s1))
  transitive.def(s1, s0)
  ord.def(s1)
}

thm ord.subseteq.transitive(set s0, set s1) {
  |- imp(ord(s0), imp(subseteq(s1,s0), imp(transitive(s1), ord(s1))))
} = {
  and.expo(ord(s0), subseteq(s1,s0), imp(transitive(s1),ord(s1)))
  syl6(and(ord(s0),subseteq(s1,s0)), transitive(s1), ord(s1), and(transitive(s1),worder(relation.in,s1)))
  ord.def(s1)
  and.intro.d.d(and(ord(s0),subseteq(s1,s0)), transitive(s1), transitive(s1), worder(relation.in,s1))
  idd(and(ord(s0),subseteq(s1,s0)), transitive(s1))
  com12(and(ord(s0),subseteq(s1,s0)), transitive(s1), worder(relation.in,s1))
  a1i(transitive(s1), imp(and(ord(s0),subseteq(s1,s0)),worder(relation.in,s1)))
  and.impo(ord(s0), subseteq(s1,s0), worder(relation.in,s1))
  syl(ord(s0), imp(subseteq(s1,s0),worder(relation.in,s1)), worder(relation.in,s0))
  ord.def(s0)
  com12(worder(relation.in,s0), subseteq(s1,s0), worder(relation.in,s1))
  subseteq.worder(relation.in, s1, s0)
}