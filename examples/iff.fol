
thm iff.imp.1(prop p0, prop p1) {
    |- imp(iff(p0,p1), imp(p0,p1))
} = {
    syl(iff(p0,p1), imp(p0,p1), and(imp(p0,p1),imp(p1,p0)))
    iff.def.1(p0, p1)
    and.left(imp(p0,p1), imp(p1,p0))
}
thm iff.imp.1i(prop p0, prop p1) {
  |- imp(p0,p1)
  -| iff(p0,p1)
} = {
  ax.mp(imp(p0,p1), iff(p0, p1))
  iff.imp.1(p0, p1)
}

thm iff.imp.2(prop p0, prop p1) {
  |- imp(iff(p0,p1), imp(p1,p0))
} = {
  syl(iff(p0,p1), imp(p1,p0), and(imp(p0,p1),imp(p1,p0)))
  iff.def.1(p0, p1)
  and.right(imp(p0,p1), imp(p1,p0))
}
thm iff.imp.2i(prop p0, prop p1) {
    |- imp(p0, p1)
    -| iff(p1, p0)
} = {
    ax.mp(imp(p0,p1), iff(p1,p0))
    iff.imp.2(p1, p0)
}

thm iff.forintro(prop p0, prop p1) {
    |- imp(imp(p0,p1), imp(imp(p1,p0), iff(p0,p1)))
} = {
    and.expo(imp(p0,p1), imp(p1,p0), iff(p0,p1))
    iff.def.2(p0, p1)
}

thm iff.intro(prop p0, prop p1) {
    |- iff(p0, p1)
    -| imp(p0, p1)
    -| imp(p1, p0)
} = {
    ax.mp(iff(p0,p1), imp(p1, p0))
    ax.mp(imp(imp(p1,p0),iff(p0,p1)), imp(p0, p1))
    iff.forintro(p0, p1)
}

thm iff.forcomm(prop p0, prop p1) {
    |- imp(iff(p0, p1), iff(p1, p0))
} = {
    syl(iff(p0,p1), iff(p1,p0), and(imp(p0,p1), imp(p1,p0)))
    iff.def.1(p0, p1)
    and.impo(imp(p0,p1), imp(p1,p0), iff(p1,p0))
    com12(imp(p0,p1), imp(p1,p0), iff(p1,p0))
    and.expo(imp(p1,p0), imp(p0,p1), iff(p1,p0))
    iff.def.2(p1, p0)
}

thm iff.comm(prop p0, prop p1) {
    |- iff(p0, p1)
    -| iff(p1, p0)
} = {
    ax.mp(iff(p0,p1), iff(p1,p0))
    iff.forcomm(p1, p0)
}

thm iff.syl(prop p0, prop p1, prop p2) {
    |- iff(p0, p1)
    -| iff(p0, p2)
    -| iff(p2, p1)
} = {
    iff.intro(p0, p1)
    syl(p0, p1, p2)
    iff.imp.1i(p0, p2)
    iff.imp.1i(p2, p1)
    syl(p1, p0, p2)
    iff.imp.2i(p1, p2)
    iff.imp.2i(p2, p0)
}
